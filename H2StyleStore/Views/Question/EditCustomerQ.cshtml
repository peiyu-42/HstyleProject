@model H2StyleStore.Models.ViewModels.EditCustomerQVM

@{
    ViewBag.Title = "EditCustomerQ";
}

<h2>回覆問題</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CustomerQuestion_Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Member_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Member_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Member_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QCategory_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QCategory_Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.QCategory_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Problem_Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Problem_Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Problem_Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @if (System.IO.File.Exists(Server.MapPath("~/Images/QuestionImages/" + Html.DisplayFor(model => model.FilePath))))
            {
                @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FilePath, new { htmlAttributes = new { @class = "form-control invisible", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.FilePath, "", new { @class = "text-danger" })
                    @*<img class="m-2" src="../../Images/QuestionImages/@Model.FilePath" width="500" name="" />*@

                    <img class="m-2" src="../../Images/QuestionImages/@Html.DisplayFor(model => model.FilePath)" width="500" name="" />
                </div>
            }
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.AskTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AskTime, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.AskTime, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Solution_Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Solution_Description, new { @class = "form-control row-5" })
                @Html.ValidationMessageFor(model => model.Solution_Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.SolveTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SolveTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SolveTime, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.Employee_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Employee_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Employee_Name, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="更新" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="putData" value="Demo" class="btn btn-link text-dark text-decoration-none"/>
            </div>
        </div>
    </div>
}

<div>
    <a href="../GetCustomerQ" class="nav-link">
        <i class="fa-solid fa-rotate-left"></i>
        回列表
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#putData").on("click", function () {
            document.getElementById("Solution_Description").value = "請將商品退回，我們將為您進行商品退換，感謝您的配合。";
        })
    </script>
}
