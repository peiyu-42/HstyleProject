@model H2StyleStore.Models.ViewModels.CreateCommonQVM

@{
    ViewBag.Title = "EditCommonQ";
    var qCategories = ViewBag.QCategoryItems as IEnumerable<SelectListItem>;
}

<h2>編輯常見問題</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CommonQuestion_Id)

        <div class="form-group">
            @Html.LabelFor(model => model.QCategory_Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.QCategory_Id, qCategories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.QCategory_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Answer, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="儲存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="../Index" class="nav-link">
        <i class="fa-solid fa-rotate-left"></i>
        回列表
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
